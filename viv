#!/bin/sh

install_dir=$(CDPATH= cd -- "$(dirname -- "$0")" && pwd -P)
vivify_server="$install_dir/vivify-server"

print_usage() {
    cat <<EOF
usage: viv target [target ...]

View file/directory in your browser with Vivify.

arguments:
  target              Path to file or directory to view. For Markdown, you can
                      suffix with :n to scroll to the content at line n in the
                      source file
options:
  --help              show this help message and exit
  --version           show version information and exit
EOF
}

print_bug_report() {
    cat <<EOF
Fatal: "$vivify_server" crashed.
Please use the link below to submit a bug report.

The bug report template will help you provide the necessary information and
maybe even find a solution yourself.

https://github.com/jannis-baum/Vivify/issues/new?labels=type%3Abug&template=bug-report.md

EOF
}

print_server_file_error() {
    cat <<EOF
Fatal: "$vivify_server" $1.

Please make sure that the "vivify-server" binary is located in the same
directory as the "viv" script and that it is executable.

EOF
}

if [ "$#" -lt 1 -o "$1" = "-h" -o "$1" = "--help" ]; then
    print_usage
    exit 1
fi

if ! test -f "$vivify_server"; then
    print_server_file_error "not found"
    exit 1
fi

if ! test -x "$vivify_server"; then
    print_server_file_error "not executable"
    exit 1
fi

output=$(mktemp)
cleanup() {
    rm -f "$output"
}
trap cleanup EXIT

nohup "$vivify_server" "$@" > "$output" 2> /dev/null &
server_pid=$!

monitor_server() {
    while true; do
        # check if startup was completed successfully, if so we can exit
        test -f "$output" || exit 0
        grep --quiet "STARTUP COMPLETE" "$output" && exit 0

        # server process ended otherwise
        if ! kill -0 $server_pid 2>/dev/null; then
            # if not, the startup failed
            print_bug_report
            # kill tail from while loop below
            pkill -P $$ tail
            exit 1
        fi
        sleep 0.3
    done
}
monitor_server &

# print stdout of vivify-server until STARTUP COMPLETE is found
tail -f "$output" | while read -r line; do
    # server finished starting
    if echo "$line" | grep --quiet "STARTUP COMPLETE"; then
        pkill -P $$ tail
        break
    fi

    echo "$line"
done
